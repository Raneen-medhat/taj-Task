{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/items/items.component.html","webpack:///./src/app/items/items.component.scss","webpack:///./src/app/items/items.component.ts","webpack:///./src/app/query-service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","// App Modules\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClient } from '@angular/common/http';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\n\n// App Components\nimport { AppComponent } from './app.component';\nimport { ItemsComponent } from './items/items.component';\n\n//App services\nimport { QueryServiceService } from './query-service.service';\n\n// App Routing\nconst appRoutes: Routes = [\n  { path: '', component: ItemsComponent }\n]\n@NgModule({\n  declarations: [\n    AppComponent,\n    ItemsComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgbModule.forRoot(),\n    RouterModule.forRoot(appRoutes),\n    HttpClientModule,\n    FormsModule,\n    Ng2SearchPipeModule\n  ],\n  providers: [QueryServiceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <!-- search input -->\\n      <input type=\\\"text\\\" class=\\\"w-100 p-2 m-1 d-block\\\" [(ngModel)]=\\\"term\\\" placeholder=\\\"بحث\\\">\\n    </div>\\n    <div class=\\\"col-sm-6\\\">\\n        <button class=\\\"btn btn-outline-primary mb-2 mr-2 p-2 m-1 d-block f-left\\\" (click)=\\\"openLg(content)\\\">اضافة صنف</button>\\n      </div>\\n    <!-- Add new Item Modal-->    \\n    <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">اضافة صنف</h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <!-- Add new Item Form -->\\n            <form  name=\\\"newItem\\\" #newItem=\\\"ngForm\\\" enctype=\\\"multipart/form-data\\\" (ngSubmit)=\\\"addNewItem(newItem)\\\" novalidate>\\n              <label >م</label>\\n              <input class=\\\"d-block w-100 m-2 p-2\\\" type=\\\"number\\\" name=\\\"ItemId\\\"  #ItemId=\\\"ngModel\\\" [(ngModel)]=\\\"newItem.ItemId\\\" readonly>\\n              <label >الاسم</label>\\n              <input class=\\\"d-block w-100 m-2 p-2\\\" type=\\\"text\\\" name=\\\"ItemName\\\"  #ItemName=\\\"ngModel\\\" [(ngModel)]=\\\"newItem.ItemName\\\" required>\\n              <label >السعر</label>\\n              <input class=\\\"d-block w-100 m-2 p-2\\\" type=\\\"number\\\" name=\\\"Price\\\"  #Price=\\\"ngModel\\\" [(ngModel)]=\\\"newItem.Price\\\" required>\\n              <label >صورة</label>\\n              <input class=\\\"d-block w-100 m-2 p-2\\\" type=\\\"file\\\" required (change)=\\\"readURL($event.target.files)\\\">\\n              <div>\\n                  <img *ngFor=\\\"let url of urls\\\" [src]=\\\"url\\\" class=\\\"rounded mb-3\\\" width=\\\"180\\\">\\n              </div>\\n              <input type=\\\"hidden\\\">\\n              <label >تاريخ الانتهاء</label>\\n              <input class=\\\"d-block w-100 m-2 p-2\\\" type=\\\"date\\\" name=\\\"ExpireDate\\\" #ExpireDate=\\\"ngModel\\\" [(ngModel)]=\\\"newItem.ExpireDate\\\" required>\\n              <button class=\\\"d-block w-100 m-2 p-2\\\" type=\\\"submit\\\" class=\\\"btn big-btn mt-2 ml-3\\\"> اضافة</button>\\n            </form> \\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('Close click')\\\">الغاء</button>\\n        </div>\\n    </ng-template>\\n\\n    <table class=\\\"table table-striped\\\">\\n      <thead>\\n        <tr>\\n          <th scope=\\\"col\\\">م</th>\\n          <th scope=\\\"col\\\">الاسم</th>\\n          <th scope=\\\"col\\\">السعر</th>\\n          <th scope=\\\"col\\\">صورة المنتج</th>\\n          <th scope=\\\"col\\\">انتهاء الصلاحية</th>\\n          <th scope=\\\"col\\\">خيارات</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let item of allItems |filter:term\\\">\\n          <td>{{item.ItemId}}</td>\\n          <td>{{item.ItemName}}</td>\\n          <td>{{item.Price}}</td>\\n          <td> <img src=\\\"{{item.Photo}}\\\" alt=\\\"\\\" alt=\\\"{{item.ItemName}}\\\">\\n            </td>\\n          <td>{{item.ExpireDate | date: 'dd/MM/yyyy'}}</td>\\n          <td>  <button class=\\\"btn btn-outline-danger m-1\\\" (click)=\\\"openVerticallyCentered(content3)\\\">مسح</button> \\n            <!-- To delete item with confirmation msg-->\\n            <ng-template #content3 let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n                <div class=\\\"modal-header\\\">\\n                  <h4 class=\\\"modal-title\\\">تاكيد الحذف</h4>\\n                </div>\\n                <div class=\\\"modal-body text-right\\\">\\n                  <p>هل انت متاكد من حذف هذا الصنف&hellip;</p>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-outline-danger m-1\\\" (click)=\\\"deleteItem(item.ItemId)\\\">تاكيد</button>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-outline-success m-1\\\" (click)=\\\"c('Close click')\\\">الغاء</button>\\n                </div>\\n            </ng-template>\\n            <!-- To Update item with confirmation msg-->\\n              <button class=\\\"btn btn-outline-primary m-1\\\" (click)=\\\"updateItem(content2,item.ItemId,item.ExpireDate)\\\">تعديل</button>\\n               <ng-template #content2 let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n                  <div class=\\\"modal-header\\\">\\n                    <h4 class=\\\"modal-title\\\">تعديل الصنف</h4>\\n                  </div>\\n                  <div class=\\\"modal-body\\\">\\n                  <!-- Add new Item Form -->\\n                  <form  name=\\\"updateItem\\\" #updateItem=\\\"ngForm\\\" enctype=\\\"multipart/form-data\\\" (ngSubmit)=\\\"toUpdateItem(updateItem)\\\" novalidate>\\n                    <label >م</label>\\n                    <input class=\\\"d-block w-100 m-2 p-2\\\" type=\\\"number\\\" name=\\\"ItemId\\\"  #ItemId=\\\"ngModel\\\" [(ngModel)]=\\\"targetItem.ItemId\\\" value=\\\"{{targetItem.ItemId}}\\\" readonly>\\n                    <label >الاسم</label>\\n                    <input class=\\\"d-block w-100 m-2 p-2\\\" type=\\\"text\\\" name=\\\"ItemName\\\"  #ItemName=\\\"ngModel\\\" [(ngModel)]=\\\"targetItem.ItemName\\\" value=\\\"{{targetItem.ItemName}}\\\" required>\\n                    <label >السعر</label>\\n                    <input class=\\\"d-block w-100 m-2 p-2\\\" type=\\\"number\\\" name=\\\"Price\\\"  #Price=\\\"ngModel\\\" [(ngModel)]=\\\"targetItem.Price\\\" value=\\\"{{targetItem.Price}}\\\"required>\\n                    <label >صورة</label>\\n                    <input class=\\\"d-block w-100 m-2 p-2\\\" type=\\\"file\\\" required (change)=\\\"readURL($event.target.files)\\\">\\n                    <div>\\n                        <img *ngFor=\\\"let url of urls\\\" [src]=\\\"url\\\" class=\\\"rounded mb-3\\\" width=\\\"180\\\">\\n                    </div>\\n                    <input type=\\\"hidden\\\">\\n                    <label >تاريخ الانتهاء</label>\\n                    <input class=\\\"d-block w-100 m-2 p-2\\\" type=\\\"date\\\" name=\\\"ExpireDate\\\" #ExpireDate=\\\"ngModel\\\" id=\\\"date\\\"[(ngModel)]=\\\"targetItem.ExpireDate\\\" value=\\\"{{targetItem.ExpireDate | date: 'dd/MM/yyyy' }}\\\" required>\\n                    <div class=\\\"modal-footer text-right\\\">\\n                        <button class=\\\"d-block w-100 m-2 p-2\\\" type=\\\"submit\\\" class=\\\"btn big-btn mt-2 ml-3 btn btn-outline-success\\\"> حفظ</button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"c('Close click')\\\">الغاء</button>\\n                      </div>\\n                  </form> \\n                </div>\\n                \\n              </ng-template>\\n          </td>\\n  \\n        </tr>\\n\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\"","module.exports = \"img {\\n  max-width: 180px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { QueryServiceService } from '../query-service.service';\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\nimport { NgModel, NgForm } from '@angular/forms';\nimport {  HttpHeaders } from '@angular/common/http';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-items',\n  templateUrl: './items.component.html',\n  styleUrls: ['./items.component.scss']\n})\nexport class ItemsComponent implements OnInit {\n  urls = new Array<string>()\n  closeResult: string;\n  allItems: Array<object>;\n  targetItem:object\n  constructor(\n    private Query : QueryServiceService,\n    private modalService: NgbModal\n  ) { \n\n    this.getItmes()\n  }\n// Modal functions\n  openLg(content) {\n    this.modalService.open(content, { size: 'lg' });\n  }\n\n  openVerticallyCentered(content) {\n    this.modalService.open(content, { centered: true });\n  }\n\n\n  // Add new Item Form Function\n  addNewItem(data : NgForm){\n    if (!data.valid) {\n      console.log(\"error\");\n    }\n    else\n    {\n      console.log(data.value);\n      let path = \"http://task.taj-it.com/api/Items\"\n      this.Query.postReq(path,data.value).subscribe(\n        res => {\n          console.log(res);  \n          location.reload()\n        \n        },\n        err => { console.log(err)\n        }\n      );\n    }\n  }\n\n  // function to read image URL and send it\n  readURL(path) {\n    this.urls = [];\n    if (path) {\n      for (let file of path) {\n        let reader = new FileReader();\n        reader.onload = (e: any) => {\n          this.urls.push(e.target.result);\n        }\n        reader.readAsDataURL(file);\n      }\n    }\n    let Imgpath = \"http://task.taj-it.com/api/UploadImage\"\n    this.Query.postReq(Imgpath,this.urls[0]).subscribe(\n      res => {\n        console.log(res);          \n      },\n      err => { console.log(err)\n      }\n    );\n  }\n\n  // function to get all items\n  getItmes(){\n    let itemPath = \"http://task.taj-it.com/api/Items\"\n    this.Query.getReq(itemPath).subscribe(\n      res => {\n        this.allItems = res        \n        console.log(this.allItems);  \n      },\n      err => { \n        console.log(err)\n      }\n    );\n  }\n  // function to delete item\n  deleteItem(id)\n  {\n    console.log(id)\n    let itemPath = `http://task.taj-it.com/api/Items/${id}`\n    this.Query.deleteReq(itemPath).subscribe(\n      res => {\n        console.log(res)\n        location.reload()\n      },\n      err => { \n        console.log(err)\n      }\n    ); \n  }\n\n   // function to open update item modal and get hit own data\n   updateItem(content2 ,item)\n   {\n    this.modalService.open(content2, { size: 'lg' });\n     let itemPath = `http://task.taj-it.com/api/Items/${item}`\n     this.Query.getReq(itemPath).subscribe(\n       res => {\n         console.log(res)\n         this.targetItem = res;\n         console.log(this.targetItem)\n        //  document.getElementById(\"Date\").defaultValue = this.targetItem['ExpireDate'] ;\n\n       },\n       err => { \n         console.log(err)\n       }\n     ); \n\n   }\n\n   toUpdateItem(updateData : NgForm){\n     console.log(updateData.value)\n    let itemPath = `http://task.taj-it.com/api/Items/${this.targetItem['ItemId']}`\n    this.Query.putReq(itemPath,updateData.value).subscribe(\n      res => {\n        console.log(res)\n        location.reload()\n      },\n      err => { \n        console.log(err)\n      }\n    ); \n   }\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueryServiceService {\n\n  constructor(\n    private http: HttpClient // Inject httpClient\n  ) { }\n\n  // Post Request path , header <option>, data <option>\n  postReq(path: string,header ?, data ?): Observable<any> {\n    return this.http.post(path,header,data);\n  }\n\n  // Get Request path , header <option>\n  getReq(path: string, header ?): Observable<any> {\n    return this.http.get(path, header);\n  }\n\n  // Put Request path , header <option>, data <option>\n  putReq(path: string, header ?, data ?): Observable<any> {\n    return this.http.put(path, header, data);\n  }\n\n   // Delete Request path , header <option>, data <option>\n   deleteReq(path: string, data ?): Observable<any> {\n    return this.http.delete(path, data);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}